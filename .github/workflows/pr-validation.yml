name: Pull Request Validation

on:
  pull_request:
    branches: [ main, develop ]
    types: [opened, synchronize, reopened]

env:
  NODE_VERSION: '18'
  PLAYWRIGHT_BROWSERS_PATH: ${{ github.workspace }}/.cache/ms-playwright

concurrency:
  group: pr-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  # Quick validation for PR feedback
  quick-validation:
    name: Quick Validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint code
        run: |
          echo "Running code linting..."
          if npm run lint:check; then
            echo "Linting passed"
          else
            echo "Linting issues found, attempting to fix..."
            npm run lint || echo "Linting failed"
          fi

      - name: Type checking
        run: |
          echo "Running type checking..."
          if npm run type-check; then
            echo "Type checking passed"
          else
            echo "Type checking failed"
            exit 1
          fi

      - name: Security audit
        run: |
          echo "Running security audit..."
          npm audit --audit-level=high || echo "Security audit completed with warnings"

  # Smoke tests for quick feedback
  pr-smoke-tests:
    name: PR Smoke Tests
    runs-on: ubuntu-latest
    needs: quick-validation
    steps:
      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ${{ env.PLAYWRIGHT_BROWSERS_PATH }}
          key: playwright-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            playwright-${{ runner.os }}-
      - name: Install Playwright browsers
        run: |
          npx playwright install --with-deps

      - name: Run smoke tests
        run: |
          npm run test:ci:smoke
        env:
          CI: true
          PR_NUMBER: ${{ github.event.pull_request.number }}

      - name: Upload Playwright traces on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: traces-pr-smoke
          path: |
            test-results/
            reports/test-execution/**/playwright-report/
          retention-days: 3

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: pr-smoke-test-results
          path: |
            reports/
            test-results/
          retention-days: 3

      - name: PR job summary
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            const reportPath = path.join('reports','test-execution','development','test-results.json');
            const totals = { total: 0, passed: 0, failed: 0, skipped: 0 };
            function walkSuite(suite) {
              for (const s of suite.suites || []) walkSuite(s);
              for (const spec of suite.specs || []) {
                for (const test of spec.tests || []) {
                  totals.total++;
                  const res = (test.results && test.results[0]) || {};
                  const st = res.status || test.status || 'unknown';
                  if (st === 'passed') totals.passed++;
                  else if (st === 'skipped' || st === 'interrupted') totals.skipped++;
                  else totals.failed++;
                }
              }
            }
            try {
              if (fs.existsSync(reportPath)) {
                const data = JSON.parse(fs.readFileSync(reportPath, 'utf8'));
                if (data && Array.isArray(data.suites)) walkSuite({ suites: data.suites });
              }
            } catch (e) {
              // ignore parsing errors; leave totals as zeros
            }
            await core.summary
              .addHeading('PR Smoke Test Summary')
              .addTable([
                ['Metric','Count'],
                ['Total', String(totals.total)],
                ['Passed', String(totals.passed)],
                ['Failed', String(totals.failed)],
                ['Skipped', String(totals.skipped)],
              ])
              .addLink('View workflow and artifacts', `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`)
              .write();

      - name: Comment PR with results
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            let comment = '## PR Smoke Test Results\n\n';
            
            try {
              // Try to read test results if available
              comment += 'Smoke tests completed successfully!\n\n';
              comment += '[View detailed test results](../actions/runs/${{ github.run_id }})\n';
            } catch (error) {
              comment += 'Smoke tests encountered issues. Please check the workflow logs.\n\n';
            }
            
            comment += '\n---\n*Automated comment from PR validation workflow*';
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  # API tests for backend changes
  pr-api-tests:
    name: PR API Tests
    runs-on: ubuntu-latest
    needs: quick-validation
    if: contains(github.event.pull_request.changed_files, 'config/postman/') || contains(github.event.pull_request.changed_files, 'scripts/api-tests/')
    steps:
      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run API tests
        run: |
          npm run test:api:comprehensive
        env:
          CI: true
          PR_NUMBER: ${{ github.event.pull_request.number }}

      - name: Upload API test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: pr-api-test-results
          path: |
            reports/api-tests/
            reports/newman/
          retention-days: 3